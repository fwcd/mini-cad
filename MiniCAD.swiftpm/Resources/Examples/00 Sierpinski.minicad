let angularStep = TAU / 3
let alpha = TAU / 6
let beta = TAU / 12

func Sierpinski(x, y, z, radius, depth) {
  let a = radius * cos(beta)
  let b = radius * cos(alpha)
  let c = a / (2 * cos(beta))
  
  if depth > 0 {
    let inner = radius - c
    for i in 0..<3 {
      let angle = angularStep * i
      let dx = cos(angle) * inner
      let dz = sin(angle) * inner
      Sierpinski(x + dx, y, z + dz, c, depth - 1)
    }
    Sierpinski(x, y + 0.75 * radius, z, c, depth - 1)
  } else {
    Translate(x, y, z) {
      Cone(radius, radius + b, 3)
    }
  }
}
  
let depth = 3
let radius = 10

Sierpinski(0, 0, 0, radius, depth)
